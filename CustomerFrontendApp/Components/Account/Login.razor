@page "/Account/Login"

@using CustomerFrontendApp.Components.Layout
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using Workshop.UseCases.ViewModels

@layout AuthenticationLayout

@inject SignInManager<UserViewModel> SignInManager
@inject UserManager<UserViewModel> UserManager
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<div class="row justify-content-center">
  <div class="col-md-4">
    <h2>Login</h2>
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin" FormName="login">
      <DataAnnotationsValidator />
      <ValidationSummary class="text-danger" />

      <div class="form-floating mb-3">
        <InputText @bind-Value="LoginModel.Email" class="form-control" placeholder="Email" />
        <label>Email</label>
        <ValidationMessage For="() => LoginModel.Email" />
      </div>

      <div class="form-floating mb-3">
        <InputText type="password" @bind-Value="LoginModel.Password" class="form-control" placeholder="Password" />
        <label>Password</label>
        <ValidationMessage For="() => LoginModel.Password" />
      </div>

      <div class="checkbox mb-3">
        <label>
          <InputCheckbox @bind-Value="LoginModel.RememberMe" /> Remember me
        </label>
      </div>

      <button type="submit" class="btn btn-primary w-100">Login</button>
    </EditForm>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
      <div class="alert alert-danger mt-3">@errorMessage</div>
    }

    <div class="mt-3">
      <p>Don't have an account? <a href="/Account/Register">Register here</a></p>
    </div>
  </div>
</div>

@code {
  [SupplyParameterFromForm]
  public LoginInputModel LoginModel { get; set; } = new();

  private string? errorMessage;

  private async Task HandleLogin()
  {
    var result = await SignInManager.PasswordSignInAsync(LoginModel.Email, LoginModel.Password, LoginModel.RememberMe, lockoutOnFailure: false);

    if (result.Succeeded)
    {
      Navigation.NavigateTo("/", forceLoad: true);
    }
    else
    {
      errorMessage = "Invalid email or password.";
    }
  }

  public class LoginInputModel
  {
    [Required]
    [EmailAddress]
    public string Email { get; set; } = "";

    [Required]
    [DataType(DataType.Password)]
    public string Password { get; set; } = "";

    public bool RememberMe { get; set; }
  }
}