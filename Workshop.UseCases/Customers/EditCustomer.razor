@using Microsoft.AspNetCore.Components.Forms
@using Workshop.Shared.Ui.Forms
@inject ICustomerApiService CustomerApiService

<h3>EditCustomer</h3>
@if (customer is CustomerEditViewModel editViewModel)
{
  <AutoForm TModel="CustomerEditViewModel" Model="editViewModel" OnSubmit="SaveCustomer">
    <Buttons>
      <button type="submit" class="btn btn-primary">Save</button>
    </Buttons>
  </AutoForm>

  <hr/>

  <EditForm Model="@editViewModel" OnValidSubmit="@SaveCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputElement ModelType="CustomerEditViewModel" @bind-Value="editViewModel.Name" For="@(() => editViewModel.Name)" Name="@nameof(CustomerEditViewModel.Name)" />

    <InputElement ModelType="CustomerEditViewModel" @bind-Value="editViewModel.Email" For="@(() => editViewModel.Email)" Name="@nameof(CustomerEditViewModel.Email)" />

    <InputElement ModelType="CustomerEditViewModel" @bind-Value="editViewModel.Phone" For="@(() => editViewModel.Phone)" Name="@nameof(CustomerEditViewModel.Phone)" />

    <button type="submit" class="btn btn-success" @onclick="SaveCustomer">Save</button>
  </EditForm>

}
else
{
  <p>Loading...</p>
}


@code {

  private CustomerEditViewModel? customer;

  [Parameter, EditorRequired]
  public int CustomerId { get; set; }

  [Parameter]
  public EventCallback<CustomerEditViewModel> OnCustomerSaved { get; set; }

  // protected override async Task OnInitializedAsync()
  // {
  //   // if (CustomerId != 0)
  //   // {
  //   //   customer = await CustomerApiService.GetCustomerById(CustomerId);
  //   // }
  // }

  protected override async Task OnParametersSetAsync()
  {
    if (CustomerId != 0)
    {
      customer = await CustomerApiService.GetCustomerById(CustomerId);
    }
  }

  private async Task SaveCustomer()
  {
    if (customer != null && OnCustomerSaved.HasDelegate)
    {
      await OnCustomerSaved.InvokeAsync(customer);
    }
  }

}
